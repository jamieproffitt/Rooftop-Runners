local north = vmath.vector3(0,1,0)
local jump_counter = 0

function init(self)
	msg.post("#", "acquire_input_focus")
	self.rotation_direction = vmath.vector3(0, 0, 0)
	self.jump_force = 0
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	local rotation = go.get_rotation()
	local world_position = go.get_world_position()
	msg.post("#collisionobject", "apply_force", { force = vmath.rotate(rotation, vmath.vector3(0,100,0)), position = go.get_world_position()})
	msg.post("#collisionobject", "apply_force", { force = vmath.rotate(rotation, self.rotation_direction), position = world_position + vmath.rotate(rotation, vmath.vector3(-50, 50, 0)) })
	msg.post("#collisionobject", "apply_force", { force = vmath.rotate(rotation, -self.rotation_direction), position = world_position + vmath.rotate(rotation, vmath.vector3(50, -50, 0)) })
	if self.roation_direction == nil then
		msg.post("#collisionobject", "apply_force", { force = vmath.rotate(rotation, -self.rotation_direction), position = world_position + vmath.rotate(rotation, vmath.vector3(50, -50, 0)) })
	end
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	if action_id == hash("player1_left") then
		if action.pressed then
			msg.post("#sprite", "play_animation", {id = hash("player_left")})
			self.rotation_direction.x = -2000
		elseif action.released then
			self.rotation_direction.x = 0
		end
	elseif action_id == hash("player1_right") then
		if action.pressed then
			msg.post("#sprite", "play_animation", {id = hash("player_right")})
			self.rotation_direction.x = 2000
		elseif action.released then
			self.rotation_direction.x = 0
		end
	end
	if action_id == hash("player1_jump") then
		if action.pressed then
			self.jump_force = 1
		end
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
